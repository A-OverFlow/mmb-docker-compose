services :
  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      TZ: Asia/Seoul
    ports:
      - 3306:3306
    volumes:
      - ./db/mysql/data:/var/lib/mysql
    platform: linux/x86_64
    networks:
      - db-net

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
    labels:
      - "name=redis"
      - "mode=standalone"
    command: redis-server /usr/local/conf/redis.conf
    networks:
      - db-net

  member-service:
    image: member-service
    container_name: member-service
    restart: unless-stopped
    depends_on:
      - mysql
      - redis
    env_file:
      - .env
    environment:
      - MYSQL_URL=${MYSQL_URL}
      - MYSQL_USERNAME=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "${MEMBER_PORT}:8080"
    command:
      - # ㅁㄹ
    networks:
      - fe-net
      - be-net
      - db-net

  question-service:
    image: question-service
    container_name: question-service
    restart: unless-stopped
    depends_on:
      - mysql
      - redis
      - member-service
    env_file:
      - .env
    environment:
      - MYSQL_URL=${MYSQL_URL}
      - MYSQL_USERNAME=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "${QUESTION_PORT}:8080"
    command:
      - # ㅁㄹ
    networks:
      - fe-net
      - be-net
      - db-net

  gateway:
    image: api-gateway
    container_name: api-gateway
    restart: unless-stopped
    depends_on:
      - member-service
      - question-service
    environment:
      - APPLICATION_PORT=${APPLICATION_PORT}
    networks:
      - fe-net

  mmb-frontend:
    image: myeongseob91/mmb-frontend:latest
    container_name: mmb-frontend
    restart: unless-stopped
    depends_on:
      - gateway
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /home/ec2-user/infra/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    command: ["nginx", "-g", "daemon off;"]
    networks:
      - fe-net

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - mgt-net
      - be-net

  process-exporter:
    image: ncabatoff/process-exporter:latest
    container_name: process-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /etc:/host/etc:ro
    command: [ "—procfs=/host/proc" ]
    ports:
      - "9256:9256"
    networks:
      - mgt-net
      - be-net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    depends_on:
      - node-exporter
      - process-exporter
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - mgt-net

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    environment:
      - GF_SERVER_ROOT_URL=https://dev.mumulbo.com/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - mgt-net

networks :
  fe-net:
    driver: bridge
  be-net:
    driver: bridge
  db-net:
    driver: bridge
  mgt-net:
    driver: bridge